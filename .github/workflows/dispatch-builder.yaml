name: Build Kairos Fleet

on:
  workflow_dispatch:
    inputs:
      registry_domain:
        description: 'The domain'
        required: true
        type: string
        default: 'quay.io'
      registry_namespace:
        description: 'ns'
        required: true
        type: string
        default: 'kairos'
      registry_repo:
        description: 'repo'
        required: true
        type: string
        default: 'ubuntu:22.04-core-arm64-nvidia-jetson-agx-orin-v3.5.0'
      architecture:
        description: 'Target architecture'
        required: true
        type: choice
        options:
            - 'amd64'
            - 'arm64'
      model:
        description: 'Target model'
        required: true
        type: choice
        options:
            - 'generic'
            - 'rpi3'
            - 'nvidia-jetson-agx-orin'
      version:
        description: 'The Kairos version you want to define the image'
        type: string
        required: true
      kubernetes_distro:
        description: 'Kubernetes distribution'
        required: true
        default: ''
        type: choice
        options:
            - 'k3s'
            - 'k0s'
      kubernetes_version:
        description: 'Kubernetes version (depends on distro e.g. v1.33.3+k3s1)'
        required: true
        default: 'auto'
        type: string
permissions:
  contents: write
  security-events: write
  id-token: write
  actions: read

jobs:
  kairos:
    name: Kairos Factory (bootable image)
    uses: kairos-io/kairos-factory-action/.github/workflows/reusable-factory.yaml@main
    with:
#      base_image: ${{ github.event.inputs.base_image }}
      arch: ${{ github.event.inputs.architecture }}
      model: ${{ github.event.inputs.model }}
      version: ${{ github.event.inputs.version }}
      iso: true
      grype: false
      summary_artifacts: true
      kubernetes_distro: ${{ github.event.inputs.kubernetes_distro }}
      kubernetes_version: ${{ github.event.inputs.kubernetes_version }}
      registry_domain: ${{ github.event.inputs.registry_domain }}
      registry_namespace: ${{ github.event.inputs.registry_namespace }}
      registry_repository: ${{ github.event.inputs.registry_repo }}
